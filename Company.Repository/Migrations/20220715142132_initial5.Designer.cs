// <auto-generated />
using System;
using Company.Repository.AppDbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220715142132_initial5")]
    partial class initial5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company.Core.Companies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("District")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Province")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TaxNumber")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Ataşehir-İstanbul",
                            CompanyType = "Limited",
                            District = "Ataşehir",
                            Name = "Şirket1",
                            Province = "İstanbul",
                            TaxNumber = 111111,
                            TaxOffice = "İstanbul Vergi Daiesi"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Kartal-İstanbul",
                            CompanyType = "Limited",
                            District = "Kartal",
                            Name = "Şirket2",
                            Province = "İstanbul",
                            TaxNumber = 111122,
                            TaxOffice = "Kartal Vergi Daiesi"
                        });
                });

            modelBuilder.Entity("Company.Core.Departments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyID = 1,
                            Name = "Departman1"
                        },
                        new
                        {
                            ID = 2,
                            CompanyID = 2,
                            Name = "Departman2"
                        });
                });

            modelBuilder.Entity("Company.Core.Subdepartments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CompaniesID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("CompaniesID");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("Subdepartments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyId = 0,
                            DepartmentsId = 1,
                            Name = "AltD1"
                        },
                        new
                        {
                            ID = 2,
                            CompanyId = 0,
                            DepartmentsId = 2,
                            Name = "AltD2"
                        },
                        new
                        {
                            ID = 3,
                            CompanyId = 0,
                            DepartmentsId = 1,
                            Name = "AltD3"
                        },
                        new
                        {
                            ID = 4,
                            CompanyId = 0,
                            DepartmentsId = 2,
                            Name = "AltD4"
                        });
                });

            modelBuilder.Entity("Company.Core.TopDepartments", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CompaniesID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("ID");

                    b.HasIndex("CompaniesID");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("TopDepartments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompanyId = 0,
                            DepartmentsId = 1,
                            Name = "ÜstD1"
                        },
                        new
                        {
                            ID = 2,
                            CompanyId = 0,
                            DepartmentsId = 1,
                            Name = "ÜstD2"
                        },
                        new
                        {
                            ID = 3,
                            CompanyId = 0,
                            DepartmentsId = 2,
                            Name = "ÜstD3"
                        },
                        new
                        {
                            ID = 4,
                            CompanyId = 0,
                            DepartmentsId = 2,
                            Name = "ÜstD4"
                        });
                });

            modelBuilder.Entity("Company.Core.Departments", b =>
                {
                    b.HasOne("Company.Core.Companies", "Companies")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("Company.Core.Subdepartments", b =>
                {
                    b.HasOne("Company.Core.Companies", "Companies")
                        .WithMany("Subdepartments")
                        .HasForeignKey("CompaniesID");

                    b.HasOne("Company.Core.Departments", "Departments")
                        .WithMany("Subdepartments")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Company.Core.TopDepartments", b =>
                {
                    b.HasOne("Company.Core.Companies", "Companies")
                        .WithMany("TopDepartments")
                        .HasForeignKey("CompaniesID");

                    b.HasOne("Company.Core.Departments", "Departments")
                        .WithMany("TopDepartments")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Company.Core.Companies", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Subdepartments");

                    b.Navigation("TopDepartments");
                });

            modelBuilder.Entity("Company.Core.Departments", b =>
                {
                    b.Navigation("Subdepartments");

                    b.Navigation("TopDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
